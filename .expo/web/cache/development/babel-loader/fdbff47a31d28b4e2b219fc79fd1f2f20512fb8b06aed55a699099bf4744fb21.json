{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar jwt = require(\"jsonwebtoken\");\nvar _require = require(\"../models/User\"),\n  User = _require.User;\nexports.protect = function () {\n  var _ref = _asyncToGenerator(function* (req, res, next) {\n    var token;\n    if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer\")) {\n      try {\n        token = req.headers.authorization.split(\" \")[1];\n        var decoded = jwt.verify(token, process.env.JWT_SECRET);\n        req.user = yield User.findById(decoded.id).select(\"-password\");\n        next();\n      } catch (error) {\n        console.error(error);\n        res.status(401).json({\n          message: \"Not authorized, invalid token\"\n        });\n      }\n    }\n    if (!token) {\n      return res.status(401).json({\n        message: \"Not authorized, no token\"\n      });\n    }\n  });\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["jwt","require","_require","User","exports","protect","_ref","_asyncToGenerator","req","res","next","token","headers","authorization","startsWith","split","decoded","verify","process","env","JWT_SECRET","user","findById","id","select","error","console","status","json","message","_x","_x2","_x3","apply","arguments"],"sources":["/Users/nslittle/Desktop/Life/coding/habit-app/server/middlewares/authMiddleware.js"],"sourcesContent":["const jwt = require(\"jsonwebtoken\");\nconst { User } = require(\"../models/User\");\n\nexports.protect = async (req, res, next) => {\n  let token;\n\n  if (\n    req.headers.authorization &&\n    req.headers.authorization.startsWith(\"Bearer\")\n  ) {\n    try {\n      token = req.headers.authorization.split(\" \")[1];\n\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n      req.user = await User.findById(decoded.id).select(\"-password\");\n\n      next();\n    } catch (error) {\n      console.error(error);\n      res.status(401).json({ message: \"Not authorized, invalid token\" });\n    }\n  }\n\n  if (!token) {\n    return res.status(401).json({ message: \"Not authorized, no token\" });\n  }\n};\n"],"mappings":";AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AACnC,IAAAC,QAAA,GAAiBD,OAAO,iBAAiB,CAAC;EAAlCE,IAAI,GAAAD,QAAA,CAAJC,IAAI;AAEZC,OAAO,CAACC,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAK;IAC1C,IAAIC,KAAK;IAET,IACEH,GAAG,CAACI,OAAO,CAACC,aAAa,IACzBL,GAAG,CAACI,OAAO,CAACC,aAAa,CAACC,UAAU,CAAC,QAAQ,CAAC,EAC9C;MACA,IAAI;QACFH,KAAK,GAAGH,GAAG,CAACI,OAAO,CAACC,aAAa,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE/C,IAAMC,OAAO,GAAGhB,GAAG,CAACiB,MAAM,CAACN,KAAK,EAAEO,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;QAEzDZ,GAAG,CAACa,IAAI,SAASlB,IAAI,CAACmB,QAAQ,CAACN,OAAO,CAACO,EAAE,CAAC,CAACC,MAAM,CAAC,WAAW,CAAC;QAE9Dd,IAAI,CAAC,CAAC;MACR,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBhB,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAgC,CAAC,CAAC;MACpE;IACF;IAEA,IAAI,CAAClB,KAAK,EAAE;MACV,OAAOF,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA2B,CAAC,CAAC;IACtE;EACF,CAAC;EAAA,iBAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}