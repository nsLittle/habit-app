{"ast":null,"code":"var mongoose = require('mongoose');\nvar _require = require('validator'),\n  isURL = _require.isURL;\nvar TeamMemberSchema = new mongoose.Schema({\n  firstName: {\n    type: String,\n    required: false,\n    trim: true\n  },\n  lastName: {\n    type: String,\n    required: false,\n    trim: true\n  },\n  email: {\n    type: String,\n    required: false,\n    unique: false,\n    match: /.+@.+\\..+/\n  },\n  profilePic: {\n    type: String,\n    required: false,\n    validate: {\n      validator: isURL,\n      message: function message(props) {\n        return `${props.value} is not a valid URL`;\n      }\n    }\n  },\n  user: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  habit: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Habit',\n    required: true\n  },\n  role: {\n    type: String,\n    required: true,\n    enum: ['cohort', 'leader'],\n    default: 'cohort'\n  }\n}, {\n  timestamps: true\n});\nmodule.exports = mongoose.model('TeamMember', TeamMemberSchema);","map":{"version":3,"names":["mongoose","require","_require","isURL","TeamMemberSchema","Schema","firstName","type","String","required","trim","lastName","email","unique","match","profilePic","validate","validator","message","props","value","user","Types","ObjectId","ref","habit","role","enum","default","timestamps","module","exports","model"],"sources":["/Users/nslittle/Desktop/Life/coding/habit-app/server/models/TeamMember.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst { isURL } = require('validator');\n\nconst TeamMemberSchema = new mongoose.Schema(\n  {\n    firstName: { type: String, required: false, trim: true },\n    lastName: { type: String, required: false, trim: true },\n    email: { type: String, required: false, unique: false, match: /.+@.+\\..+/ }, // Optional, but validates email format\n    profilePic: {\n      type: String,\n      required: false,\n      validate: {\n        validator: isURL,\n        message: props => `${props.value} is not a valid URL`\n      }\n    },\n    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n    habit: { type: mongoose.Schema.Types.ObjectId, ref: 'Habit', required: true },\n    role: { \n      type: String, \n      required: true, \n      enum: ['cohort', 'leader'], \n      default: 'cohort'\n    },\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model('TeamMember', TeamMemberSchema);"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,IAAAC,QAAA,GAAkBD,OAAO,CAAC,WAAW,CAAC;EAA9BE,KAAK,GAAAD,QAAA,CAALC,KAAK;AAEb,IAAMC,gBAAgB,GAAG,IAAIJ,QAAQ,CAACK,MAAM,CAC1C;EACEC,SAAS,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC;EACxDC,QAAQ,EAAE;IAAEJ,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAK,CAAC;EACvDE,KAAK,EAAE;IAAEL,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,KAAK;IAAEI,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAY,CAAC;EAC3EC,UAAU,EAAE;IACVR,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,KAAK;IACfO,QAAQ,EAAE;MACRC,SAAS,EAAEd,KAAK;MAChBe,OAAO,EAAE,SAATA,OAAOA,CAAEC,KAAK;QAAA,OAAI,GAAGA,KAAK,CAACC,KAAK,qBAAqB;MAAA;IACvD;EACF,CAAC;EACDC,IAAI,EAAE;IAAEd,IAAI,EAAEP,QAAQ,CAACK,MAAM,CAACiB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAO,CAAC;EAC3DC,KAAK,EAAE;IAAElB,IAAI,EAAEP,QAAQ,CAACK,MAAM,CAACiB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE,OAAO;IAAEf,QAAQ,EAAE;EAAK,CAAC;EAC7EiB,IAAI,EAAE;IACJnB,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdkB,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAC1BC,OAAO,EAAE;EACX;AACF,CAAC,EACD;EAAEC,UAAU,EAAE;AAAK,CACrB,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG/B,QAAQ,CAACgC,KAAK,CAAC,YAAY,EAAE5B,gBAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}