{"ast":null,"code":"require(\"dotenv\").config();\nvar express = require(\"express\");\nvar cors = require(\"cors\");\nvar swaggerUi = require(\"swagger-ui-express\");\nvar YAML = require(\"yamljs\");\nvar swaggerDocument = YAML.load(\"./swagger.yaml\");\nvar connectDB = require(\"./config/db\");\nvar app = express();\nvar PORT = process.env.PORT || 8000;\nconnectDB();\napp.use(cors());\napp.use(express.json());\napp.use(function (req, res, next) {\n  console.log(`Incoming Request: ${req.method} ${req.url}`);\n  next();\n});\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDocument));\napp.get(\"/\", function (req, res) {\n  res.send(\"Habit App server is running!\");\n});\nvar authRoutes = require(\"./routes/authRoutes\");\napp.use(\"/auth\", authRoutes);\nvar userRoutes = require(\"./routes/userRoutes\");\napp.use(\"/user\", userRoutes);\nvar habitRoutes = require(\"./routes/habitRoutes\");\napp.use(\"/habit\", habitRoutes);\nvar teamMemberRoutes = require(\"./routes/teammemberRoutes\");\napp.use(\"/teammember\", teamMemberRoutes);\nvar feedbackRoutes = require(\"./routes/feedbackRoutes\");\napp.use('/feedback', feedbackRoutes);\nvar notificationRoutes = require(\"./routes/notificationRoutes\");\napp.use('/notification', notificationRoutes);\napp.listen(PORT, function () {\n  console.log(`Server is running on http://localhost:${PORT}`);\n  console.log(`Swagger docs available at http://localhost:${PORT}/api-docs`);\n});","map":{"version":3,"names":["require","config","express","cors","swaggerUi","YAML","swaggerDocument","load","connectDB","app","PORT","process","env","use","json","req","res","next","console","log","method","url","serve","setup","get","send","authRoutes","userRoutes","habitRoutes","teamMemberRoutes","feedbackRoutes","notificationRoutes","listen"],"sources":["/Users/nslittle/Desktop/Life/coding/habit-app/server/index.js"],"sourcesContent":["require(\"dotenv\").config();\n\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst swaggerUi = require(\"swagger-ui-express\");\nconst YAML = require(\"yamljs\");\nconst swaggerDocument = YAML.load(\"./swagger.yaml\");\nconst connectDB = require(\"./config/db\");\n\nconst app = express();\nconst PORT = process.env.PORT || 8000;\n\nconnectDB();\n\napp.use(cors());\napp.use(express.json());\n\napp.use((req, res, next) => {\n  console.log(`Incoming Request: ${req.method} ${req.url}`);\n  next();\n});\n\napp.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n\napp.get(\"/\", (req, res) => {\n  res.send(\"Habit App server is running!\");\n});\n\nconst authRoutes = require(\"./routes/authRoutes\");\napp.use(\"/auth\", authRoutes);\n\nconst userRoutes = require(\"./routes/userRoutes\");\napp.use(\"/user\", userRoutes);\n\nconst habitRoutes = require(\"./routes/habitRoutes\");\napp.use(\"/habit\", habitRoutes);\n\nconst teamMemberRoutes = require(\"./routes/teammemberRoutes\");\napp.use(\"/teammember\", teamMemberRoutes);\n\nconst feedbackRoutes = require(\"./routes/feedbackRoutes\");\napp.use('/feedback', feedbackRoutes);\n\nconst notificationRoutes = require(\"./routes/notificationRoutes\");\napp.use('/notification', notificationRoutes);\n\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n  console.log(`Swagger docs available at http://localhost:${PORT}/api-docs`);\n});"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAE1B,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAMI,SAAS,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AAC/C,IAAMK,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAMM,eAAe,GAAGD,IAAI,CAACE,IAAI,CAAC,gBAAgB,CAAC;AACnD,IAAMC,SAAS,GAAGR,OAAO,cAAc,CAAC;AAExC,IAAMS,GAAG,GAAGP,OAAO,CAAC,CAAC;AACrB,IAAMQ,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCF,SAAS,CAAC,CAAC;AAEXC,GAAG,CAACI,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC;AACfM,GAAG,CAACI,GAAG,CAACX,OAAO,CAACY,IAAI,CAAC,CAAC,CAAC;AAEvBL,GAAG,CAACI,GAAG,CAAC,UAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAK;EAC1BC,OAAO,CAACC,GAAG,CAAC,qBAAqBJ,GAAG,CAACK,MAAM,IAAIL,GAAG,CAACM,GAAG,EAAE,CAAC;EACzDJ,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEFR,GAAG,CAACI,GAAG,CAAC,WAAW,EAAET,SAAS,CAACkB,KAAK,EAAElB,SAAS,CAACmB,KAAK,CAACjB,eAAe,CAAC,CAAC;AAEvEG,GAAG,CAACe,GAAG,CAAC,GAAG,EAAE,UAACT,GAAG,EAAEC,GAAG,EAAK;EACzBA,GAAG,CAACS,IAAI,CAAC,8BAA8B,CAAC;AAC1C,CAAC,CAAC;AAEF,IAAMC,UAAU,GAAG1B,OAAO,sBAAsB,CAAC;AACjDS,GAAG,CAACI,GAAG,CAAC,OAAO,EAAEa,UAAU,CAAC;AAE5B,IAAMC,UAAU,GAAG3B,OAAO,sBAAsB,CAAC;AACjDS,GAAG,CAACI,GAAG,CAAC,OAAO,EAAEc,UAAU,CAAC;AAE5B,IAAMC,WAAW,GAAG5B,OAAO,uBAAuB,CAAC;AACnDS,GAAG,CAACI,GAAG,CAAC,QAAQ,EAAEe,WAAW,CAAC;AAE9B,IAAMC,gBAAgB,GAAG7B,OAAO,4BAA4B,CAAC;AAC7DS,GAAG,CAACI,GAAG,CAAC,aAAa,EAAEgB,gBAAgB,CAAC;AAExC,IAAMC,cAAc,GAAG9B,OAAO,0BAA0B,CAAC;AACzDS,GAAG,CAACI,GAAG,CAAC,WAAW,EAAEiB,cAAc,CAAC;AAEpC,IAAMC,kBAAkB,GAAG/B,OAAO,8BAA8B,CAAC;AACjES,GAAG,CAACI,GAAG,CAAC,eAAe,EAAEkB,kBAAkB,CAAC;AAE5CtB,GAAG,CAACuB,MAAM,CAACtB,IAAI,EAAE,YAAM;EACrBQ,OAAO,CAACC,GAAG,CAAC,yCAAyCT,IAAI,EAAE,CAAC;EAC5DQ,OAAO,CAACC,GAAG,CAAC,8CAA8CT,IAAI,WAAW,CAAC;AAC5E,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}