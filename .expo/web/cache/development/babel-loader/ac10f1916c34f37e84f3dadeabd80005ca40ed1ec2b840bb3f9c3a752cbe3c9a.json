{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _require = require(\"../models/Habit\"),\n  Habit = _require.Habit;\nvar _require2 = require(\"../models/User\"),\n  User = _require2.User;\nexports.createHabit = function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    try {\n      console.log('Incoming request to create habit for:', req.params.username);\n      var username = req.params.username;\n      var habit = req.body.habit;\n      console.log('Username:', username);\n      if (!habit) {\n        return res.status(400).json({\n          message: 'Habit is required'\n        });\n      }\n      var user = yield User.findOne({\n        username: username\n      });\n      if (!user) {\n        return res.status(404).json({\n          message: 'User not found'\n        });\n      }\n      var newHabit = yield Habit.create({\n        habit: habit,\n        user: user._id\n      });\n      res.status(201).json({\n        habit_id: newHabit._id,\n        message: 'Habit created successfully'\n      });\n    } catch (error) {\n      res.status(500).json({\n        message: 'Server error',\n        error: error.message\n      });\n    }\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.getUserHabits = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    try {\n      var username = req.params.username;\n      console.log('Fetching habits for:', username);\n      var user = yield User.findOne({\n        username: username\n      });\n      if (!user) {\n        return res.status(404).json({\n          message: 'User not found'\n        });\n      }\n      var habits = yield Habit.find({\n        user: user._id\n      });\n      res.status(200).json({\n        message: 'Habits retrieved successfully',\n        habits: habits\n      });\n    } catch (error) {\n      res.status(500).json({\n        message: 'Server error',\n        error: error.message\n      });\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.updateDetailedHabit = function () {\n  var _ref3 = _asyncToGenerator(function* (req, res) {\n    try {\n      var _req$params = req.params,\n        username = _req$params.username,\n        habit_id = _req$params.habit_id;\n      console.log('Updating Habit:', habit_id, 'for User:', username);\n      var user = yield User.findOne({\n        username: username\n      });\n      if (!user) {\n        return res.status(404).json({\n          message: 'User not found'\n        });\n      }\n      var updatedHabit = yield Habit.findOneAndUpdate({\n        _id: habit_id,\n        user: user._id\n      }, req.body, {\n        new: true\n      });\n      if (!updatedHabit) {\n        return res.status(404).json({\n          message: 'Habit not found'\n        });\n      }\n      res.status(200).json({\n        message: 'Detailed habit updated successfully',\n        updatedHabit: updatedHabit\n      });\n    } catch (error) {\n      res.status(400).json({\n        error: error.message\n      });\n    }\n  });\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexports.completeHabit = function () {\n  var _ref4 = _asyncToGenerator(function* (req, res) {\n    try {\n      var habit_id = req.params.habit_id;\n      var completedHabit = yield Habit.findByIdAndUpdate(habit_id, {\n        completed: true\n      }, {\n        new: true\n      });\n      if (!completedHabit) {\n        return res.status(404).json({\n          message: 'Habit not found'\n        });\n      }\n      res.status(200).json({\n        message: 'Habit marked as complete successfully',\n        completedHabit: completedHabit\n      });\n    } catch (error) {\n      res.status(500).json({\n        message: 'Server error',\n        error: error.message\n      });\n    }\n  });\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["_require","require","Habit","_require2","User","exports","createHabit","_ref","_asyncToGenerator","req","res","console","log","params","username","habit","body","status","json","message","user","findOne","newHabit","create","_id","habit_id","error","_x","_x2","apply","arguments","getUserHabits","_ref2","habits","find","_x3","_x4","updateDetailedHabit","_ref3","_req$params","updatedHabit","findOneAndUpdate","new","_x5","_x6","completeHabit","_ref4","completedHabit","findByIdAndUpdate","completed","_x7","_x8"],"sources":["/Users/nslittle/Desktop/Life/coding/habit-app/server/controllers/habitController.js"],"sourcesContent":["const { Habit } = require('../models/Habit');\nconst { User } = require('../models/User');\n\nexports.createHabit = async (req, res) => {\n  try {\n    console.log('Incoming request to create habit for:', req.params.username);\n\n    const { username } = req.params;\n    const { habit } = req.body;\n    console.log('Username:', username);\n\n    if (!habit) {\n      return res.status(400).json({ message: 'Habit is required' });\n    }\n\n    const user = await User.findOne({ username });\n\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    const newHabit = await Habit.create({\n      habit,\n      user: user._id,\n    });\n\n    res.status(201).json({\n      habit_id: newHabit._id,\n      message: 'Habit created successfully',\n    });\n  } catch (error) {\n    res.status(500).json({ message: 'Server error', error: error.message });\n  }\n};\n\nexports.getUserHabits = async (req, res) => {\n  try {\n    const { username } = req.params;\n    console.log('Fetching habits for:', username);\n\n    const user = await User.findOne({ username });\n\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    const habits = await Habit.find({ user: user._id });\n\n    res.status(200).json({\n      message: 'Habits retrieved successfully',\n      habits,\n    });\n  } catch (error) {\n    res.status(500).json({ message: 'Server error', error: error.message });\n  }\n};\n\nexports.updateDetailedHabit = async (req, res) => {\n  try {\n    const { username, habit_id } = req.params;\n    console.log('Updating Habit:', habit_id, 'for User:', username);\n\n    const user = await User.findOne({ username });\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    const updatedHabit = await Habit.findOneAndUpdate(\n      { _id: habit_id, user: user._id },\n      req.body,\n      { new: true }\n    );\n    if (!updatedHabit) {\n      return res.status(404).json({ message: 'Habit not found' });\n    }\n\n    res.status(200).json({\n      message: 'Detailed habit updated successfully',\n      updatedHabit,\n    });\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n};\n\nexports.completeHabit = async (req, res) => {\n  try {\n    const { habit_id } = req.params;\n\n    const completedHabit = await Habit.findByIdAndUpdate(\n      habit_id,\n      { completed: true },\n      { new: true }\n    );\n\n    if (!completedHabit) {\n      return res.status(404).json({ message: 'Habit not found' });\n    }\n\n    res.status(200).json({\n      message: 'Habit marked as complete successfully',\n      completedHabit,\n    });\n  } catch (error) {\n    res.status(500).json({ message: 'Server error', error: error.message });\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}