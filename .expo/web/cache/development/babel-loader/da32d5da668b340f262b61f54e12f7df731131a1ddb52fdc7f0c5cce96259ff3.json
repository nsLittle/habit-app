{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar mongoose = require(\"mongoose\");\nvar connectDB = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var conn = yield mongoose.connect(process.env.MONGO_URI);\n      console.log(`MongoDB connected successfully: ${conn.connection.host}`);\n    } catch (error) {\n      console.error(`Error: ${error.message}`);\n      process.exit(1);\n    }\n  });\n  return function connectDB() {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = connectDB;","map":{"version":3,"names":["mongoose","require","connectDB","_ref","_asyncToGenerator","conn","connect","process","env","MONGO_URI","console","log","connection","host","error","message","exit","apply","arguments","module","exports"],"sources":["/Users/nslittle/Desktop/Life/coding/habit-app/server/config/db.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\n\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGO_URI);\n    console.log(`MongoDB connected successfully: ${conn.connection.host}`);\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\n\nmodule.exports = connectDB;\n"],"mappings":";AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC5B,IAAI;MACF,IAAMC,IAAI,SAASL,QAAQ,CAACM,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;MAC1DC,OAAO,CAACC,GAAG,CAAC,mCAAmCN,IAAI,CAACO,UAAU,CAACC,IAAI,EAAE,CAAC;IACxE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,UAAUA,KAAK,CAACC,OAAO,EAAE,CAAC;MACxCR,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAAA,gBARKd,SAASA,CAAA;IAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQd;AAEDC,MAAM,CAACC,OAAO,GAAGlB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}