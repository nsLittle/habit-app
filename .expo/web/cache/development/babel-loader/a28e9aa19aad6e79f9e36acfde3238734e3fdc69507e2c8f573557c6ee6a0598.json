{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar User = require(\"../models/User\");\nvar TeamMember = require(\"../models/TeamMember\");\nexports.addTeamMember = function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    try {\n      var username = req.params.username;\n      var _req$body = req.body,\n        firstName = _req$body.firstName,\n        lastName = _req$body.lastName,\n        email = _req$body.email,\n        habit = _req$body.habit,\n        role = _req$body.role;\n      console.log(`Adding team member for user: ${username}`);\n      if (!firstName || !habit || !role) {\n        return res.status(400).json({\n          message: 'Required fields are missing'\n        });\n      }\n      var user = yield User.findOne({\n        username: username\n      });\n      console.log('User Found:', username);\n      if (!user) {\n        return res.status(404).json({\n          message: 'User not found'\n        });\n      }\n      console.log(`User found: ${user._id}`);\n      var newTeamMember = yield TeamMember.create({\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        habit: habit,\n        role: role,\n        user: user._id\n      });\n      console.log('Team Member Created:', newTeamMember);\n      res.status(201).json({\n        message: 'Team member added successfully',\n        teamMember: newTeamMember\n      });\n    } catch (error) {\n      console.error('Error adding team member:', error.message);\n      res.status(500).json({\n        error: 'Failed to add team member'\n      });\n    }\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.getTeamMembers = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    try {\n      var username = req.params.username;\n      console.log('Fetching team members for:', username);\n      var user = yield User.findOne({\n        username: username\n      });\n      if (!user) {\n        return res.status(404).json({\n          message: 'User not found'\n        });\n      }\n      var teamMembers = yield TeamMember.find({\n        user: user._id\n      });\n      res.status(200).json({\n        message: 'Team members retrieved successfully',\n        teamMembers: teamMembers\n      });\n    } catch (error) {\n      console.error('Error retrieving team members:', error.message);\n      res.status(500).json({\n        message: 'Server error',\n        error: error.message\n      });\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.updateTeamMember = function () {\n  var _ref3 = _asyncToGenerator(function* (req, res) {\n    try {\n      var teamMember_id = req.params.teamMember_id;\n      if (!mongoose.Types.ObjectId.isValid(teamMember_id)) {\n        return res.status(400).json({\n          message: 'Invalid Team Member ID'\n        });\n      }\n      var teamMember = yield TeamMember.findById(teamMember_id);\n      if (!teamMember) {\n        return res.status(404).json({\n          message: 'Team member not found'\n        });\n      }\n      if (req.user.role !== 'admin' && req.user.id !== teamMember.owner.toString()) {\n        return res.status(403).json({\n          message: 'Forbidden: You do not have permission to update this team member'\n        });\n      }\n      var updatedTeamMember = yield TeamMember.findByIdAndUpdate(teamMember_id, req.body, {\n        new: true\n      });\n      if (!updatedTeamMember) {\n        return res.status(404).json({\n          message: 'Team member not found'\n        });\n      }\n      res.status(200).json({\n        message: 'Team member updated successfully',\n        teamMember: updatedTeamMember\n      });\n    } catch (error) {\n      res.status(500).json({\n        error: 'Failed to update team member'\n      });\n    }\n  });\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexports.deleteTeamMember = function () {\n  var _ref4 = _asyncToGenerator(function* (req, res) {\n    try {\n      var teamMember_id = req.params.teamMember_id;\n      var deletedTeamMember = yield TeamMember.findByIdAndDelete(teamMember_id);\n      if (!deletedTeamMember) {\n        return res.status(404).json({\n          message: 'Team member not found'\n        });\n      }\n      res.status(200).json({\n        message: 'Team member deleted successfully'\n      });\n    } catch (error) {\n      res.status(500).json({\n        error: 'Failed to delete team member'\n      });\n    }\n  });\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["User","require","TeamMember","exports","addTeamMember","_ref","_asyncToGenerator","req","res","username","params","_req$body","body","firstName","lastName","email","habit","role","console","log","status","json","message","user","findOne","_id","newTeamMember","create","teamMember","error","_x","_x2","apply","arguments","getTeamMembers","_ref2","teamMembers","find","_x3","_x4","updateTeamMember","_ref3","teamMember_id","mongoose","Types","ObjectId","isValid","findById","id","owner","toString","updatedTeamMember","findByIdAndUpdate","new","_x5","_x6","deleteTeamMember","_ref4","deletedTeamMember","findByIdAndDelete","_x7","_x8"],"sources":["/Users/nslittle/Desktop/Life/coding/habit-app/server/controllers/teamMemberController.js"],"sourcesContent":["const User = require('../models/User'); \nconst TeamMember = require('../models/TeamMember');\n\nexports.addTeamMember = async (req, res) => {\n  try {\n    const { username } = req.params;\n    const { firstName, lastName, email, habit, role } = req.body;\n\n    console.log(`Adding team member for user: ${username}`);\n\n    if (!firstName || !habit || !role) {\n      return res.status(400).json({ message: 'Required fields are missing' });\n    }\n\n    const user = await User.findOne({ username });\n\n    console.log('User Found:', username);\n\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    console.log(`User found: ${user._id}`);\n\n    const newTeamMember = await TeamMember.create({\n      firstName,\n      lastName,\n      email,\n      habit,\n      role,\n      user: user._id,\n    });\n\n    console.log('Team Member Created:', newTeamMember);\n\n    res.status(201).json({\n      message: 'Team member added successfully',\n      teamMember: newTeamMember,\n    });\n  } catch (error) {\n    console.error('Error adding team member:', error.message);\n    res.status(500).json({ error: 'Failed to add team member' });\n  }\n};\n\nexports.getTeamMembers = async (req, res) => {\n  try {\n    const { username } = req.params;\n    console.log('Fetching team members for:', username);\n\n    const user = await User.findOne({ username });\n\n    if (!user) {\n      return res.status(404).json({ message: 'User not found' });\n    }\n\n    const teamMembers = await TeamMember.find({ user: user._id });\n\n    res.status(200).json({\n      message: 'Team members retrieved successfully',\n      teamMembers,\n    });\n  } catch (error) {\n    console.error('Error retrieving team members:', error.message);\n    res.status(500).json({ message: 'Server error', error: error.message });\n  }\n};\n\nexports.updateTeamMember = async (req, res) => {\n  try {\n    const { teamMember_id } = req.params;\n\n    if (!mongoose.Types.ObjectId.isValid(teamMember_id)) {\n      return res.status(400).json({ message: 'Invalid Team Member ID' });\n    }\n\n    const teamMember = await TeamMember.findById(teamMember_id);\n    if (!teamMember) {\n      return res.status(404).json({ message: 'Team member not found' });\n    }\n\n    if (req.user.role !== 'admin' && req.user.id !== teamMember.owner.toString()) {\n      return res.status(403).json({ message: 'Forbidden: You do not have permission to update this team member' });\n    }\n\n    const updatedTeamMember = await TeamMember.findByIdAndUpdate(teamMember_id, req.body, { new: true });\n\n    if (!updatedTeamMember) {\n      return res.status(404).json({ message: 'Team member not found' });\n    }\n\n    res.status(200).json({\n      message: 'Team member updated successfully',\n      teamMember: updatedTeamMember,\n    });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to update team member' });\n  }\n};\n\nexports.deleteTeamMember = async (req, res) => {\n  try {\n    const { teamMember_id } = req.params;\n\n    const deletedTeamMember = await TeamMember.findByIdAndDelete(teamMember_id);\n\n    if (!deletedTeamMember) {\n      return res.status(404).json({ message: 'Team member not found' });\n    }\n\n    res.status(200).json({ message: 'Team member deleted successfully' });\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to delete team member' });\n  }\n};"],"mappings":";AAAA,IAAMA,IAAI,GAAGC,OAAO,iBAAiB,CAAC;AACtC,IAAMC,UAAU,GAAGD,OAAO,uBAAuB,CAAC;AAElDE,OAAO,CAACC,aAAa;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC1C,IAAI;MACF,IAAQC,QAAQ,GAAKF,GAAG,CAACG,MAAM,CAAvBD,QAAQ;MAChB,IAAAE,SAAA,GAAoDJ,GAAG,CAACK,IAAI;QAApDC,SAAS,GAAAF,SAAA,CAATE,SAAS;QAAEC,QAAQ,GAAAH,SAAA,CAARG,QAAQ;QAAEC,KAAK,GAAAJ,SAAA,CAALI,KAAK;QAAEC,KAAK,GAAAL,SAAA,CAALK,KAAK;QAAEC,IAAI,GAAAN,SAAA,CAAJM,IAAI;MAE/CC,OAAO,CAACC,GAAG,CAAC,gCAAgCV,QAAQ,EAAE,CAAC;MAEvD,IAAI,CAACI,SAAS,IAAI,CAACG,KAAK,IAAI,CAACC,IAAI,EAAE;QACjC,OAAOT,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAA8B,CAAC,CAAC;MACzE;MAEA,IAAMC,IAAI,SAASvB,IAAI,CAACwB,OAAO,CAAC;QAAEf,QAAQ,EAARA;MAAS,CAAC,CAAC;MAE7CS,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEV,QAAQ,CAAC;MAEpC,IAAI,CAACc,IAAI,EAAE;QACT,OAAOf,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAiB,CAAC,CAAC;MAC5D;MAEAJ,OAAO,CAACC,GAAG,CAAC,eAAeI,IAAI,CAACE,GAAG,EAAE,CAAC;MAEtC,IAAMC,aAAa,SAASxB,UAAU,CAACyB,MAAM,CAAC;QAC5Cd,SAAS,EAATA,SAAS;QACTC,QAAQ,EAARA,QAAQ;QACRC,KAAK,EAALA,KAAK;QACLC,KAAK,EAALA,KAAK;QACLC,IAAI,EAAJA,IAAI;QACJM,IAAI,EAAEA,IAAI,CAACE;MACb,CAAC,CAAC;MAEFP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,aAAa,CAAC;MAElDlB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBC,OAAO,EAAE,gCAAgC;QACzCM,UAAU,EAAEF;MACd,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACP,OAAO,CAAC;MACzDd,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEQ,KAAK,EAAE;MAA4B,CAAC,CAAC;IAC9D;EACF,CAAC;EAAA,iBAAAC,EAAA,EAAAC,GAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA;AAED9B,OAAO,CAAC+B,cAAc;EAAA,IAAAC,KAAA,GAAA7B,iBAAA,CAAG,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC3C,IAAI;MACF,IAAQC,QAAQ,GAAKF,GAAG,CAACG,MAAM,CAAvBD,QAAQ;MAChBS,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEV,QAAQ,CAAC;MAEnD,IAAMc,IAAI,SAASvB,IAAI,CAACwB,OAAO,CAAC;QAAEf,QAAQ,EAARA;MAAS,CAAC,CAAC;MAE7C,IAAI,CAACc,IAAI,EAAE;QACT,OAAOf,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAiB,CAAC,CAAC;MAC5D;MAEA,IAAMc,WAAW,SAASlC,UAAU,CAACmC,IAAI,CAAC;QAAEd,IAAI,EAAEA,IAAI,CAACE;MAAI,CAAC,CAAC;MAE7DjB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBC,OAAO,EAAE,qCAAqC;QAC9Cc,WAAW,EAAXA;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACP,OAAO,CAAC;MAC9Dd,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,cAAc;QAAEO,KAAK,EAAEA,KAAK,CAACP;MAAQ,CAAC,CAAC;IACzE;EACF,CAAC;EAAA,iBAAAgB,GAAA,EAAAC,GAAA;IAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA;AAED9B,OAAO,CAACqC,gBAAgB;EAAA,IAAAC,KAAA,GAAAnC,iBAAA,CAAG,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC7C,IAAI;MACF,IAAQkC,aAAa,GAAKnC,GAAG,CAACG,MAAM,CAA5BgC,aAAa;MAErB,IAAI,CAACC,QAAQ,CAACC,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACJ,aAAa,CAAC,EAAE;QACnD,OAAOlC,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAyB,CAAC,CAAC;MACpE;MAEA,IAAMM,UAAU,SAAS1B,UAAU,CAAC6C,QAAQ,CAACL,aAAa,CAAC;MAC3D,IAAI,CAACd,UAAU,EAAE;QACf,OAAOpB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAwB,CAAC,CAAC;MACnE;MAEA,IAAIf,GAAG,CAACgB,IAAI,CAACN,IAAI,KAAK,OAAO,IAAIV,GAAG,CAACgB,IAAI,CAACyB,EAAE,KAAKpB,UAAU,CAACqB,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC5E,OAAO1C,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAmE,CAAC,CAAC;MAC9G;MAEA,IAAM6B,iBAAiB,SAASjD,UAAU,CAACkD,iBAAiB,CAACV,aAAa,EAAEnC,GAAG,CAACK,IAAI,EAAE;QAAEyC,GAAG,EAAE;MAAK,CAAC,CAAC;MAEpG,IAAI,CAACF,iBAAiB,EAAE;QACtB,OAAO3C,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAwB,CAAC,CAAC;MACnE;MAEAd,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBC,OAAO,EAAE,kCAAkC;QAC3CM,UAAU,EAAEuB;MACd,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdrB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEQ,KAAK,EAAE;MAA+B,CAAC,CAAC;IACjE;EACF,CAAC;EAAA,iBAAAyB,GAAA,EAAAC,GAAA;IAAA,OAAAd,KAAA,CAAAT,KAAA,OAAAC,SAAA;EAAA;AAAA;AAED9B,OAAO,CAACqD,gBAAgB;EAAA,IAAAC,KAAA,GAAAnD,iBAAA,CAAG,WAAOC,GAAG,EAAEC,GAAG,EAAK;IAC7C,IAAI;MACF,IAAQkC,aAAa,GAAKnC,GAAG,CAACG,MAAM,CAA5BgC,aAAa;MAErB,IAAMgB,iBAAiB,SAASxD,UAAU,CAACyD,iBAAiB,CAACjB,aAAa,CAAC;MAE3E,IAAI,CAACgB,iBAAiB,EAAE;QACtB,OAAOlD,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAwB,CAAC,CAAC;MACnE;MAEAd,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAmC,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdrB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEQ,KAAK,EAAE;MAA+B,CAAC,CAAC;IACjE;EACF,CAAC;EAAA,iBAAA+B,GAAA,EAAAC,GAAA;IAAA,OAAAJ,KAAA,CAAAzB,KAAA,OAAAC,SAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}