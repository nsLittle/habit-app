swagger: '2.0'
info:
  version: 1.0.0
  title: HabitApp API
  description: API documentation for HabitApp.
host: api.habitapp.com
basePath: /
schemes:
  - https
paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      description: Creates a new user account.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              full_name:
                type: string
              email:
                type: string
              phone:
                type: string
              profile_photo:
                type: string
                format: binary
              username:
                type: string
              password:
                type: string
            required:
              - full_name
              - email
              - password
      responses:
        '200':
          description: User created successfully
        '400':
          description: Bad request
  /auth/login:
    post:
      summary: User login
      description: Logs in an existing user.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
  /auth/logout:
    post:
      summary: Logout user
      description: Logs out the user by invalidating the session/token.
      responses:
        '200':
          description: Logged out successfully
          schema:
            type: object
            properties:
              message:
                type: string
  /auth/protected-route:
    get:
      summary: Protected route
      description: Returns authentication status and user details.
      responses:
        '200':
          description: User is authenticated
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
  /user/{username}:
    get:
      summary: Get user profile
      description: Retrieves profile details for a specific user.
      parameters:
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: User profile retrieved successfully
        '404':
          description: User not found
  /habit/{username}:
    get:
      summary: Get all habits for a user
      description: Retrieves all habits associated with a specific user.
      parameters:
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Habits retrieved successfully
  /teammember/{username}:
    post:
      summary: Add a new team member
      description: Adds a new team member for a user.
      parameters:
        - in: path
          name: username
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              habit:
                type: string
              role:
                type: string
                enum:
                  - cohort
                  - leader
            required:
              - firstName
              - habit
              - role
      responses:
        '201':
          description: Team member added successfully
        '400':
          description: Bad request
    get:
      summary: Get all team members
      description: Retrieves all team members for a user.
      parameters:
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Team members retrieved successfully
  /teammember/{username}/{teammember_id}:
    put:
      summary: Update a team member
      description: Updates a team member's details.
      parameters:
        - in: path
          name: username
          required: true
          type: string
        - in: path
          name: teammember_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              role:
                type: string
                enum:
                  - cohort
                  - leader
      responses:
        '200':
          description: Team member updated successfully
    delete:
      summary: Delete a team member
      description: Deletes a team member.
      parameters:
        - in: path
          name: username
          required: true
          type: string
        - in: path
          name: teammember_id
          required: true
          type: string
      responses:
        '204':
          description: Team member deleted successfully
